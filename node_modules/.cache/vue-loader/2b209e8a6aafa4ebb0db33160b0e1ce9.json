{"remainingRequest":"C:\\Users\\User\\Music\\milagre\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\User\\Music\\milagre\\src\\pages\\UserList.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\User\\Music\\milagre\\src\\pages\\UserList.vue","mtime":1753401390905},{"path":"C:\\Users\\User\\Music\\milagre\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753222949551},{"path":"C:\\Users\\User\\Music\\milagre\\node_modules\\babel-loader\\lib\\index.js","mtime":1753222968939},{"path":"C:\\Users\\User\\Music\\milagre\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753222949551},{"path":"C:\\Users\\User\\Music\\milagre\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1753222973447}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgQXBwTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvQXBwTGF5b3V0LnZ1ZScNCmltcG9ydCBNb2RhbCBmcm9tICcuLi9jb21wb25lbnRzL01vZGFsLnZ1ZScNCmltcG9ydCBhcGkgZnJvbSAnLi4vc2VydmljZXMvYXBpJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsgQXBwTGF5b3V0LCBNb2RhbCB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICB1c2VyczogW10sDQogICAgICBzaG93TW9kYWw6IGZhbHNlLA0KICAgICAgc2VsZWN0ZWRVc2VyOiBudWxsLA0KICAgICAgc2VhcmNoOiAnJywNCiAgICAgIHJvbGVGaWx0ZXI6ICcnDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGlzQWRtaW4oKSB7DQogICAgICBjb25zdCB1c2VyID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcicpKQ0KICAgICAgcmV0dXJuIHVzZXIgJiYgdXNlci5pc19hZG1pbg0KICAgIH0sDQogICAgZmlsdGVyZWRVc2VycygpIHsNCiAgICAgIGxldCB1c2VycyA9IHRoaXMudXNlcnMNCiAgICAgIGlmICh0aGlzLnNlYXJjaCkgew0KICAgICAgICB1c2VycyA9IHVzZXJzLmZpbHRlcih1ID0+IHUubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHRoaXMuc2VhcmNoLnRvTG93ZXJDYXNlKCkpKQ0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMucm9sZUZpbHRlcikgew0KICAgICAgICB1c2VycyA9IHVzZXJzLmZpbHRlcih1ID0+IHUucm9sZSA9PT0gdGhpcy5yb2xlRmlsdGVyKQ0KICAgICAgfQ0KICAgICAgcmV0dXJuIHVzZXJzDQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZmV0Y2hVc2VycygpIHsNCiAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYXBpLmdldCgnL3VzZXJzJykNCiAgICAgIHRoaXMudXNlcnMgPSBkYXRhDQogICAgfSwNCiAgICBvcGVuTW9kYWwodXNlcikgew0KICAgICAgaWYgKHRoaXMuaXNBZG1pbikgew0KICAgICAgICB0aGlzLnNlbGVjdGVkVXNlciA9IHVzZXINCiAgICAgICAgdGhpcy5zaG93TW9kYWwgPSB0cnVlDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZmV0Y2hVc2VycygpDQogIH0NCn0NCg=="},{"version":3,"sources":["C:\\Users\\User\\Music\\milagre\\src\\pages\\UserList.vue"],"names":[],"mappings":"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","file":"C:/Users/User/Music/milagre/src/pages/UserList.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <AppLayout>\r\n    <div class=\"max-w-5xl mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-blue-900\">Usuários</h2>\r\n      <div class=\"flex items-center space-x-2 mb-2\">\r\n        <input\r\n          v-model=\"search\"\r\n          @input=\"fetchUsers\"\r\n          placeholder=\"Buscar usuário...\"\r\n          class=\"border border-blue-700 bg-gray-100 text-gray-800 px-3 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n        />\r\n        <select\r\n          v-model=\"roleFilter\"\r\n          @change=\"fetchUsers\"\r\n          class=\"border border-blue-700 bg-gray-100 text-gray-800 px-3 py-2 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n        >\r\n          <option value=\"\">Todos</option>\r\n          <option value=\"admin\">Admin</option>\r\n          <option value=\"user\">Usuário</option>\r\n        </select>\r\n      </div>\r\n      <div v-if=\"!filteredUsers.length\" class=\"text-center text-blue-400 py-8\">\r\n        Nenhum usuário encontrado.\r\n      </div>\r\n      <table v-else class=\"w-full rounded-lg shadow text-gray-800 overflow-hidden\">\r\n        <thead>\r\n          <tr class=\"bg-blue-900 text-white\">\r\n            <th class=\"py-3 px-4 text-left font-semibold\">Nome</th>\r\n            <th class=\"py-3 px-4 text-left font-semibold\">Email</th>\r\n            <th class=\"py-3 px-4 text-left font-semibold\">Tipo</th>\r\n            <th class=\"py-3 px-4 text-left font-semibold\" v-if=\"isAdmin\">Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"user in filteredUsers\"\r\n            :key=\"user.id\"\r\n            class=\"bg-white hover:bg-blue-50 transition\"\r\n          >\r\n            <td class=\"py-2 px-4\">{{ user.name }}</td>\r\n            <td class=\"py-2 px-4\">{{ user.email }}</td>\r\n            <td class=\"py-2 px-4\">{{ user.is_admin ? 'Administrador' : 'Usuário' }}</td>\r\n            <td class=\"py-2 px-4\" v-if=\"isAdmin\">\r\n              <button @click=\"openModal(user)\" class=\"text-blue-600 hover:text-blue-800 mr-2\" title=\"Ver detalhes\">\r\n                <i class=\"fas fa-eye\"></i>\r\n              </button>\r\n              <router-link :to=\"`/users/${user.id}/edit`\" class=\"text-green-600 hover:text-green-800 mr-2\" title=\"Editar\">\r\n                <i class=\"fas fa-edit\"></i>\r\n              </router-link>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <Modal :show=\"showModal && isAdmin\" @close=\"showModal = false\">\r\n        <div v-if=\"selectedUser\">\r\n          <h3 class=\"text-xl font-bold text-blue-900 mb-2\">{{ selectedUser.name }}</h3>\r\n          <p class=\"text-blue-600 mb-1\">Email: <span class=\"text-blue-900\">{{ selectedUser.email }}</span></p>\r\n          <p class=\"text-blue-600 mb-1\">Tipo: <span class=\"text-blue-900\">{{ selectedUser.is_admin ? 'Administrador' : 'Usuário' }}</span></p>\r\n          <p class=\"text-blue-600 mb-1\">ID: <span class=\"text-blue-900\">{{ selectedUser.id }}</span></p>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  </AppLayout>\r\n</template>\r\n\r\n<script>\r\nimport AppLayout from '../components/AppLayout.vue'\r\nimport Modal from '../components/Modal.vue'\r\nimport api from '../services/api'\r\n\r\nexport default {\r\n  components: { AppLayout, Modal },\r\n  data() {\r\n    return {\r\n      users: [],\r\n      showModal: false,\r\n      selectedUser: null,\r\n      search: '',\r\n      roleFilter: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isAdmin() {\r\n      const user = JSON.parse(localStorage.getItem('user'))\r\n      return user && user.is_admin\r\n    },\r\n    filteredUsers() {\r\n      let users = this.users\r\n      if (this.search) {\r\n        users = users.filter(u => u.name.toLowerCase().includes(this.search.toLowerCase()))\r\n      }\r\n      if (this.roleFilter) {\r\n        users = users.filter(u => u.role === this.roleFilter)\r\n      }\r\n      return users\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      const { data } = await api.get('/users')\r\n      this.users = data\r\n    },\r\n    openModal(user) {\r\n      if (this.isAdmin) {\r\n        this.selectedUser = user\r\n        this.showModal = true\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers()\r\n  }\r\n}\r\n</script> "]}]}